#include <iostream>
#include <string>
#include <map>
using namespace std;

#define T true
#define F false

string octs = " cdefgabCDEFGAB";

bool inf[15][10] =
{
	{F,F,F,F,F,F,F,F,F,F},
	{F,T,T,T,F,F,T,T,T,T},
	{F,T,T,T,F,F,T,T,T,F},
	{F,T,T,T,F,F,T,T,F,F},
	{F,T,T,T,F,F,T,F,F,F},
	{F,T,T,T,F,F,F,F,F,F},
	{F,T,T,F,F,F,F,F,F,F},
	{F,T,F,F,F,F,F,F,F,F},
	{F,F,T,F,F,F,F,F,F,F},
	
	{T,T,T,T,F,F,T,T,T,F},
	{T,T,T,T,F,F,T,T,F,F},
	{T,T,T,T,F,F,T,F,F,F},
	{T,T,T,T,F,F,F,F,F,F},
	{T,T,T,F,F,F,F,F,F,F},
	{T,T,F,F,F,F,F,F,F,F},
};

map<char, int> otf;

int main()
{
	for (int i = 1; i<=14; i++)
		otf.insert(pair<char, int>(octs[i], i));
	
	int t, preindex, nxtindex;
	string str;
	cin >> t;
	getline(cin, str);
	
	for (int i = 0; i<t; i++)
	{
		int pressed[10] = {0};
		getline(cin, str);
		preindex = 0;
		nxtindex = otf[str[0]];
		for (int j=1; j<=str.size(); j++)
		{
			for (int k=0; k<10; k++)
				if (!inf[preindex][k] && inf[nxtindex][k]) pressed[k]++;
			preindex = nxtindex;
			nxtindex = otf[str[j]];	
		}
		for (int j=0; j<10; j++)
			cout << pressed[j] << ' ';
		cout << '\n';
		
	}
}
